{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ram21\\\\.vscode\\\\.vscode\\\\react\\\\myfirstproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Navbar from './components/Navbar';\nimport Textform from './components/textform';\nimport './App.css';\nimport React, { useState } from 'react';\nimport Alert from './components/alert';\nimport Home from './components/home';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('Dark Mode');\n  const [mystyle2, setMystyle2] = useState(\"white\");\n  const [mystyle, setMystyle] = useState('black');\n  const [alert, setAlert] = useState(null);\n  const doalert = (message, type) => {\n    setAlert({\n      msg: message,\n      types: type\n    });\n  };\n  setTimeout(() => {\n    setAlert(null);\n  }, 5000);\n  const onhandlechange = () => {\n    console.log('hello');\n    if (mode === 'Dark Mode') {\n      setMode('Light Mode');\n      setMystyle('#00000087');\n      setMystyle2('black');\n      doalert(\"Converted to Dark mode\", \"success\");\n    } else {\n      setMode('Dark Mode');\n      setMystyle('black');\n      setMystyle2('white');\n      doalert(\"Converted to Light mode\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      method: \"Strings\",\n      title: \"Conversion\",\n      Array: \"Array Function\",\n      modes: mode,\n      mystyle: mystyle,\n      mystyle2: mystyle2,\n      togglechange: onhandlechange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Home, {\n      mystyle: mystyle,\n      setMystyle2: my\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"6RC415Ukm9h6acktng/0Yqoc8Wk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Textform","React","useState","Alert","Home","BrowserRouter","Router","Switch","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","mystyle2","setMystyle2","mystyle","setMystyle","alert","setAlert","doalert","message","type","msg","types","setTimeout","onhandlechange","console","log","children","method","title","Array","modes","togglechange","fileName","_jsxFileName","lineNumber","columnNumber","my","_c","$RefreshReg$"],"sources":["C:/Users/ram21/.vscode/.vscode/react/myfirstproject/src/App.js"],"sourcesContent":["import Navbar from './components/Navbar'\nimport Textform from './components/textform'\nimport './App.css';\nimport React,{useState}from 'react'\nimport Alert from './components/alert'\nimport Home from './components/home'\nimport {BrowserRouter as Router,\nSwitch,\nRoute,\nLink}from 'react-router-dom'\nfunction App() {\n  const [mode, setMode] = useState('Dark Mode');\n  const [mystyle2,setMystyle2]=useState(\"white\")\n  const [mystyle,setMystyle]=useState('black')\n  const [alert, setAlert] = useState(null)\n  const doalert=(message,type)=>{\n    setAlert({\n         msg:message,\n         types:type\n    })\n }\n setTimeout(() => {\n  setAlert(null)\n }, 5000);\n  const onhandlechange = () => {\n    console.log('hello')\n    if (mode==='Dark Mode') {\n      setMode('Light Mode')\n      setMystyle('#00000087')\n      setMystyle2('black')\n      doalert(\"Converted to Dark mode\",\"success\")\n    }\n    else\n    {\n      setMode('Dark Mode')\n      setMystyle('black')\n      setMystyle2('white')\n      doalert(\"Converted to Light mode\",\"success\")\n    }\n  }\n  return (\n    <>\n     {<Navbar method=\"Strings\" title=\"Conversion\" Array=\"Array Function\" modes={mode} mystyle={mystyle} mystyle2={mystyle2} togglechange={onhandlechange} />}\n      <Alert alert={alert}/>\n      {/* <Textform line=\"Enter the text for conversion\" mystyle={mystyle} mystyle2={mystyle2} alert={doalert}/> */}\n      <Home mystyle={mystyle} setMystyle2={my}/>\n        </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAEC,QAAQ,QAAM,OAAO;AACnC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAAQC,aAAa,IAAIC,MAAM,EAC/BC,MAAM,EACNC,KAAK,EACLC,IAAI,QAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,WAAW,CAAC;EAC7C,MAAM,CAACgB,QAAQ,EAACC,WAAW,CAAC,GAACjB,QAAQ,CAAC,OAAO,CAAC;EAC9C,MAAM,CAACkB,OAAO,EAACC,UAAU,CAAC,GAACnB,QAAQ,CAAC,OAAO,CAAC;EAC5C,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMsB,OAAO,GAACA,CAACC,OAAO,EAACC,IAAI,KAAG;IAC5BH,QAAQ,CAAC;MACJI,GAAG,EAACF,OAAO;MACXG,KAAK,EAACF;IACX,CAAC,CAAC;EACL,CAAC;EACDG,UAAU,CAAC,MAAM;IAChBN,QAAQ,CAAC,IAAI,CAAC;EACf,CAAC,EAAE,IAAI,CAAC;EACP,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC3BC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,IAAIhB,IAAI,KAAG,WAAW,EAAE;MACtBC,OAAO,CAAC,YAAY,CAAC;MACrBI,UAAU,CAAC,WAAW,CAAC;MACvBF,WAAW,CAAC,OAAO,CAAC;MACpBK,OAAO,CAAC,wBAAwB,EAAC,SAAS,CAAC;IAC7C,CAAC,MAED;MACEP,OAAO,CAAC,WAAW,CAAC;MACpBI,UAAU,CAAC,OAAO,CAAC;MACnBF,WAAW,CAAC,OAAO,CAAC;MACpBK,OAAO,CAAC,yBAAyB,EAAC,SAAS,CAAC;IAC9C;EACF,CAAC;EACD,oBACEb,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA,CAACZ,MAAM;MAACmC,MAAM,EAAC,SAAS;MAACC,KAAK,EAAC,YAAY;MAACC,KAAK,EAAC,gBAAgB;MAACC,KAAK,EAAErB,IAAK;MAACI,OAAO,EAAEA,OAAQ;MAACF,QAAQ,EAAEA,QAAS;MAACoB,YAAY,EAAER;IAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACtJ/B,OAAA,CAACR,KAAK;MAACmB,KAAK,EAAEA;IAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAEtB/B,OAAA,CAACP,IAAI;MAACgB,OAAO,EAAEA,OAAQ;MAACD,WAAW,EAAEwB;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA,gBACrC;AAEX;AAAC3B,EAAA,CAtCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
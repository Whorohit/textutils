{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ram21\\\\.vscode\\\\.vscode\\\\react\\\\myfirstproject\\\\src\\\\components\\\\textform.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Textform(prop) {\n  _s();\n  const convert = () => {\n    console.log(\"convert text\");\n    let newtext = count.toUpperCase();\n    setCount(newtext);\n  };\n  const entertext = event => {\n    setCount(event.target.value);\n  };\n  const [count, setCount] = useState(\"Enter the the text here\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3 text-center h3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"exampleFormControlTextarea1\",\n      class: \"form-label\",\n      children: prop.line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      class: \"form-control container-sm  border-secondary\",\n      id: \"exampleFormControlTextarea1\",\n      rows: \"3\",\n      value: count,\n      onChange: entertext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"btnclass\",\n      className: \"text-start m\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" btn btn-primary my-2 \",\n        onClick: convert,\n        children: \"Convert to uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secndory mx-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Textform, \"TqcYfRZGPzTRmy5CKWo229Eagmc=\");\n_c = Textform;\nTextform.propTypes = {\n  line: PropTypes.string.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"Textform\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","Textform","prop","_s","convert","console","log","newtext","count","toUpperCase","setCount","entertext","event","target","value","className","children","for","class","line","fileName","_jsxFileName","lineNumber","columnNumber","id","rows","onChange","onClick","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/ram21/.vscode/.vscode/react/myfirstproject/src/components/textform.js"],"sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Textform(prop) {\r\n  \r\n  const convert=()=>{\r\n    console.log(\"convert text\");\r\n    let newtext=count.toUpperCase();\r\n    setCount(newtext)\r\n  }\r\n  const entertext=(event)=>\r\n{\r\n      setCount(event.target.value)\r\n}\r\n  const [count,setCount]=useState(\"Enter the the text here\");\r\n  return (\r\n    <div className=\"mb-3 text-center h3\">\r\n    <label for=\"exampleFormControlTextarea1\" class=\"form-label\">{prop.line}</label>\r\n    <textarea class=\"form-control container-sm  border-secondary\" id=\"exampleFormControlTextarea1\" rows=\"3\" value={count} onChange={entertext} ></textarea>\r\n    <div  id=\"btnclass\"className='text-start m'>\r\n      <button className=' btn btn-primary my-2 '  onClick={convert}>Convert to uppercase</button>\r\n      <button className='btn btn-secndory mx-2'></button>\r\n      </div>\r\n  </div>\r\n  )\r\n}\r\nTextform.propTypes={\r\n    line:PropTypes.string.isRequired\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,QAAQA,CAACC,IAAI,EAAE;EAAAC,EAAA;EAErC,MAAMC,OAAO,GAACA,CAAA,KAAI;IAChBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,IAAIC,OAAO,GAACC,KAAK,CAACC,WAAW,EAAE;IAC/BC,QAAQ,CAACH,OAAO,CAAC;EACnB,CAAC;EACD,MAAMI,SAAS,GAAEC,KAAK,IACxB;IACMF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EACC,MAAM,CAACN,KAAK,EAACE,QAAQ,CAAC,GAACb,QAAQ,CAAC,yBAAyB,CAAC;EAC1D,oBACEG,OAAA;IAAKe,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBACpChB,OAAA;MAAOiB,GAAG,EAAC,6BAA6B;MAACC,KAAK,EAAC,YAAY;MAAAF,QAAA,EAAEd,IAAI,CAACiB;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC/EvB,OAAA;MAAUkB,KAAK,EAAC,6CAA6C;MAACM,EAAE,EAAC,6BAA6B;MAACC,IAAI,EAAC,GAAG;MAACX,KAAK,EAAEN,KAAM;MAACkB,QAAQ,EAAEf;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAa,eACvJvB,OAAA;MAAMwB,EAAE,EAAC,UAAU;MAAAT,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzChB,OAAA;QAAQe,SAAS,EAAC,wBAAwB;QAAEY,OAAO,EAAEvB,OAAQ;QAAAY,QAAA,EAAC;MAAoB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC3FvB,OAAA;QAAQe,SAAS,EAAC;MAAuB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAER;AAACpB,EAAA,CAtBuBF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAuBhCA,QAAQ,CAAC4B,SAAS,GAAC;EACfV,IAAI,EAACrB,SAAS,CAACgC,MAAM,CAACC;AAC1B,CAAC;AAAA,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
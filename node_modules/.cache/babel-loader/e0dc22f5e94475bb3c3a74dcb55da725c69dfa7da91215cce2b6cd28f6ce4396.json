{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ram21\\\\.vscode\\\\.vscode\\\\react\\\\myfirstproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Navbar from './components/Navbar';\nimport Textform from './components/textform';\nimport './App.css';\nimport React, { useState } from 'react';\nimport Alert from './components/alert';\nimport Home from './components/home';\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('Dark Mode');\n  const [mystyle2, setMystyle2] = useState(\"white\");\n  const [mystyle, setMystyle] = useState('black');\n  const [alert, setAlert] = useState(null);\n  const doalert = (message, type) => {\n    setAlert({\n      msg: message,\n      types: type\n    });\n  };\n  setTimeout(() => {\n    setAlert(null);\n  }, 5000);\n  const onhandlechange = () => {\n    console.log('hello');\n    if (mode === 'Dark Mode') {\n      setMode('Light Mode');\n      setMystyle('#00000087');\n      setMystyle2('black');\n      doalert(\"Converted to Dark mode\", \"success\");\n    } else {\n      setMode('Dark Mode');\n      setMystyle('black');\n      setMystyle2('white');\n      doalert(\"Converted to Light mode\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        method: \"Strings\",\n        title: \"Conversion\",\n        Array: \"Array Function\",\n        modes: mode,\n        mystyle: mystyle,\n        mystyle2: mystyle2,\n        togglechange: onhandlechange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/textform\",\n          element: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            mystyle: mystyle,\n            mystyle2: mystyle2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"2YkoVWGLAvNQScb1VvF8hWKd6xM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Textform","React","useState","Alert","Home","BrowserRouter","Router","Route","Routes","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","mystyle2","setMystyle2","mystyle","setMystyle","alert","setAlert","doalert","message","type","msg","types","setTimeout","onhandlechange","console","log","children","method","title","Array","modes","togglechange","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","_c","$RefreshReg$"],"sources":["C:/Users/ram21/.vscode/.vscode/react/myfirstproject/src/App.js"],"sourcesContent":["import Navbar from './components/Navbar'\nimport Textform from './components/textform'\nimport './App.css';\nimport React, {useState } from 'react'\nimport Alert from './components/alert'\nimport Home from './components/home'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Link\n} from \"react-router-dom\"\n\nfunction App() {\n  const [mode, setMode] = useState('Dark Mode');\n  const [mystyle2, setMystyle2] = useState(\"white\")\n  const [mystyle, setMystyle] = useState('black')\n  const [alert, setAlert] = useState(null)\n  const doalert = (message, type) => {\n    setAlert({\n      msg: message,\n      types: type\n    })\n  }\n  setTimeout(() => {\n    setAlert(null)\n  }, 5000);\n  const onhandlechange = () => {\n    console.log('hello')\n    if (mode === 'Dark Mode') {\n      setMode('Light Mode')\n      setMystyle('#00000087')\n      setMystyle2('black')\n      doalert(\"Converted to Dark mode\", \"success\")\n    }\n    else {\n      setMode('Dark Mode')\n      setMystyle('black')\n      setMystyle2('white')\n      doalert(\"Converted to Light mode\", \"success\")\n    }\n  }\n  return (\n    <>\n      <Router>\n        {<Navbar method=\"Strings\" title=\"Conversion\" Array=\"Array Function\" modes={mode} mystyle={mystyle} mystyle2={mystyle2} togglechange={onhandlechange} />}\n        <Alert alert={alert} />\n        <Routes>\n          <Route exact path='/textform' element>\n            \n          </Route>\n          <Route exact path='/'>\n            <Home mystyle={mystyle} mystyle2={mystyle2} />\n          </Route>\n         </Routes> \n      </Router> \n    </>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}